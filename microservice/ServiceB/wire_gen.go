// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	service2 "ServiceB/application/service"
	"ServiceB/cmd/controller"
	"ServiceB/cmd/face"
	"ServiceB/domain/service"
	"ServiceB/infrastructure"
	"ServiceB/infrastructure/cache"
	"ServiceB/infrastructure/dao"
	"ServiceB/infrastructure/viperx"
)

// Injectors from wire.go:

func InitService(setting *viperx.VipperSetting) (*BServer, error) {
	appConf := infrastructure.NewAppConf(setting)
	cacheConfig := infrastructure.NewCacheConf(setting)
	client := cache.InitCache(cacheConfig)
	daoDao := dao.NewDao(client)
	orderRepository := service.ProvideBRepository(daoDao)
	bService := service.NewService(orderRepository)
	serviceService := service2.ProvideService(bService)
	application := service2.NewApplication(serviceService)
	controllerApplication := controller.ProvideApplication(application)
	controllerController := controller.NewController(controllerApplication)
	engine := face.RegisterRoute(controllerController)
	bServer := NewBServer(appConf, engine)
	return bServer, nil
}
